# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import inms_pb2 as inms__pb2


class DetectionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UpdateDetectedIngredients = channel.unary_unary(
        '/inms.Detection/UpdateDetectedIngredients',
        request_serializer=inms__pb2.DetectedIngredientsRequest.SerializeToString,
        response_deserializer=inms__pb2.DetectedIngredientsResponse.FromString,
        )


class DetectionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UpdateDetectedIngredients(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DetectionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UpdateDetectedIngredients': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateDetectedIngredients,
          request_deserializer=inms__pb2.DetectedIngredientsRequest.FromString,
          response_serializer=inms__pb2.DetectedIngredientsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'inms.Detection', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BackendRequestsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetIngredients = channel.unary_unary(
        '/inms.BackendRequests/GetIngredients',
        request_serializer=inms__pb2.GetIngredientsRequest.SerializeToString,
        response_deserializer=inms__pb2.GetIngredientsResponse.FromString,
        )
    self.GetRecipes = channel.unary_unary(
        '/inms.BackendRequests/GetRecipes',
        request_serializer=inms__pb2.GetRecipesRequest.SerializeToString,
        response_deserializer=inms__pb2.GetRecipesResponse.FromString,
        )


class BackendRequestsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetIngredients(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRecipes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BackendRequestsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetIngredients': grpc.unary_unary_rpc_method_handler(
          servicer.GetIngredients,
          request_deserializer=inms__pb2.GetIngredientsRequest.FromString,
          response_serializer=inms__pb2.GetIngredientsResponse.SerializeToString,
      ),
      'GetRecipes': grpc.unary_unary_rpc_method_handler(
          servicer.GetRecipes,
          request_deserializer=inms__pb2.GetRecipesRequest.FromString,
          response_serializer=inms__pb2.GetRecipesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'inms.BackendRequests', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
